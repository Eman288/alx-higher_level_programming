====================
matrix_divided function
====================
>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> matrix_divided([], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, "k")
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([], "ds")
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[], [], []], "Sa")
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[], [], []], 7)
[[], [], []]
>>> mat = [[2, 4], [2, 4, 5]]
>>> matrix_divided(mat, 7)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> matrix_divided(2, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[], 2], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
